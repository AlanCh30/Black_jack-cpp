#include <iostream>
#include <random>
#include <vector>

using namespace std;

vector<int> deck(52);
int playerScore = 0;
int dealerScore = 0;

void createDeck() {
    int cardCount = 0;

    for (int figure = 0; figure < 4; figure++) { // 4 palos
        for (int card = 1; card <= 13; card++) {// 13 cartas
            int cardValue;
            if (card >= 10) {
                cardValue = 10; // 10, J, Q, K
            } else if (card == 1) {
                cardValue = 11; // As
            } else {
                cardValue = card; // 2 a 9
            }
            deck[cardCount] = cardValue;
            cardCount++;
        }
    }
}

int drawCard() {
    random_device rd;
    mt19937 gen(rd());
    uniform_int_distribution<int> dist(0, deck.size() - 1);

    int cardIndex = dist(gen);
    int cardValue = deck[cardIndex];


    deck.erase(deck.begin() + cardIndex);

    return cardValue;
}
void initGame() {
    playerScore = drawCard();
    dealerScore = drawCard();
}
void displayScores() {
    cout << "Puntuacion del jugador: " << playerScore << endl;
    cout << "Puntuacion del dealer: " << dealerScore << endl;
}
void validateWinner() {
    if (playerScore > 21) {
        cout << "Perdiste (Te pasaste de 21)." << endl;
    } else if (playerScore == 21) {
        cout << "Ganaste (Tienes 21 puntos)!" << endl;
    } else if (playerScore > dealerScore) {
        cout << "Ganaste.Tienes mas puntos que el dealer!" << endl;
    } else if (playerScore == dealerScore) {
        cout << "Empate!" << endl;
    } else {
        cout << "Perdiste, El dealer tiene mas puntos" << endl;
    }
}

int main() {
    createDeck();
    initGame();
    displayScores();
    validateWinner();

    return 0;
}
